{
	"_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
	"meta": {
		"version": "PTDL_v2",
		"update_url": null
	},
	"exported_at": "2023-03-11T04:11:28+00:00",
	"name": "Guardian Bot",
	"author": "jordan.bmp.mckoy@gmail.com",
	"description": "A Guardian Discord Bot Egg",
	"features": null,
	"docker_images": {
		"ghcr.io/parkervcp/yolks:nodejs_18": "ghcr.io/parkervcp/yolks:nodejs_18"
	},
	"file_denylist": [],
	"startup": "if [[ -d .git ]] && [[ {{AUTO_UPDATE}} == \"1\" ]]; then git pull; fi; if [[ ! -z ${NODE_PACKAGES} ]]; then /usr/local/bin/npm install ${NODE_PACKAGES}; fi; if [[ ! -z ${UNNODE_PACKAGES} ]]; then /usr/local/bin/npm uninstall ${UNNODE_PACKAGES}; fi; if [ -f /home/container/package.json ]; then /usr/local/bin/npm install; /usr/local/bin/npm run build; fi; /usr/local/bin/node /home/container/{{JS_FILE}}",
	"config": {
		"files": "{}",
		"startup": "{\r\n    \"done\": \"Guardian Is Alive!\"\r\n}",
		"logs": "{}",
		"stop": "^^C"
	},
	"scripts": {
		"installation": {
			"script": "#!/bin/bash\r\n# NodeJS App Installation Script\r\n#\r\n# Server Files: /mnt/server\r\n\r\napt update\r\napt install -y git curl jq file unzip make gcc g++ python3 libtool\r\n\r\n/usr/local/bin/npm install pnpm --global\r\n\r\nmkdir -p /mnt/server\r\ncd /mnt/server\r\n\r\n## add git ending if it's not on the address\r\nif [[ ${GIT_ADDRESS} != *.git ]]; then\r\n    GIT_ADDRESS=${GIT_ADDRESS}.git\r\nfi\r\n\r\n## pull git js repo\r\nif [ \"$(ls -A /mnt/server)\" ]; then\r\n    echo -e \"/mnt/server directory is not empty.\"\r\n    if [ -d .git ]; then\r\n        echo -e \".git directory exists\"\r\n        if [ -f .git/config ]; then\r\n            echo -e \"loading info from git config\"\r\n            ORIGIN=$(git config --get remote.origin.url)\r\n        else\r\n            echo -e \"files found with no git config\"\r\n            echo -e \"closing out without touching things to not break anything\"\r\n            exit 10\r\n        fi\r\n    fi\r\n\r\n    if [ \"${ORIGIN}\" == \"${GIT_ADDRESS}\" ]; then\r\n        echo \"pulling latest from github\"\r\n        git pull\r\n    fi\r\nelse\r\n    echo -e \"/mnt/server is empty.\\ncloning files into repo\"\r\n    if [ -z ${BRANCH} ]; then\r\n        echo -e \"cloning default branch\"\r\n        git clone ${GIT_ADDRESS} .\r\n    else\r\n        echo -e \"cloning ${BRANCH}'\"\r\n        git clone --single-branch --branch ${BRANCH} ${GIT_ADDRESS} .\r\n    fi\r\n\r\nfi\r\n\r\necho \"Installing Packages\"\r\nif [ -f /mnt/server/package.json ]; then\r\n    pnpm install\r\nfi\r\n\r\necho \"Building Guardian\"\r\n\r\npnpm build\r\n\r\necho \"NODE_ENV=${NODE_ENV}\" > .env\r\n\r\necho -e \"Install complete\"\r\nexit 0",
			"container": "node:14-buster-slim",
			"entrypoint": "bash"
		}
	},
	"variables": [
		{
			"name": "Git Repo Address",
			"description": "The GitHub repo to clone\r\n\r\nExample - https://github.com/tropicdev/guardian.git",
			"env_variable": "GIT_ADDRESS",
			"default_value": "https://github.com/tropicdev/guardian.git",
			"user_viewable": true,
			"user_editable": true,
			"rules": "nullable|string",
			"field_type": "text"
		},
		{
			"name": "Install Branch",
			"description": "The branch to install.",
			"env_variable": "BRANCH",
			"default_value": "master",
			"user_viewable": true,
			"user_editable": true,
			"rules": "nullable|string",
			"field_type": "text"
		},
		{
			"name": "Auto Update",
			"description": "Pull the latest files on startup when using a GitHub repo.",
			"env_variable": "AUTO_UPDATE",
			"default_value": "0",
			"user_viewable": true,
			"user_editable": true,
			"rules": "required|boolean",
			"field_type": "text"
		},
		{
			"name": "JS file",
			"description": "The file that starts the app",
			"env_variable": "JS_FILE",
			"default_value": "dist/index.js",
			"user_viewable": true,
			"user_editable": true,
			"rules": "required|string",
			"field_type": "text"
		},
		{
			"name": "Node Environment",
			"description": "Sets the ENV to show different log levels\r\n\r\nproduction - Info, Warn and Error Logs will be shown\r\ndevelopment - Additional info will be shown",
			"env_variable": "NODE_ENV",
			"default_value": "production",
			"user_viewable": false,
			"user_editable": true,
			"rules": "required|string|max:20",
			"field_type": "text"
		}
	]
}
